#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26

// Function to calculate letter frequencies in the given text
void calculateFrequency(char *text, int frequency[ALPHABET_SIZE]) {
    for (int i = 0; text[i] != '\0'; i++) {
        if (isalpha(text[i])) {
            frequency[tolower(text[i]) - 'a']++;
        }
    }
}

// Function to perform a letter frequency attack
void letterFrequencyAttack(char *ciphertext, int topN) {
    int frequency[ALPHABET_SIZE] = {0};
    calculateFrequency(ciphertext, frequency);

    // Create a mapping between the English alphabet and the corresponding cipher letters
    char cipherMapping[ALPHABET_SIZE];
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        cipherMapping[i] = 'A' + i;
    }

    // Sort the mapping based on letter frequencies
    for (int i = 0; i < ALPHABET_SIZE - 1; i++) {
        for (int j = i + 1; j < ALPHABET_SIZE; j++) {
            if (frequency[j] > frequency[i]) {
                // Swap frequencies
                int tempFreq = frequency[i];
                frequency[i] = frequency[j];
                frequency[j] = tempFreq;

                // Swap corresponding cipher letters
                char tempChar = cipherMapping[i];
                cipherMapping[i] = cipherMapping[j];
                cipherMapping[j] = tempChar;
            }
        }
    }

    // Display the top N possible plaintexts
    for (int k = 0; k < topN; k++) {
        char plaintext[1000];
        for (int i = 0; ciphertext[i] != '\0'; i++) {
            if (isalpha(ciphertext[i])) {
                char originalLetter = tolower(ciphertext[i]);
                int index = originalLetter - 'a';
                char decryptedLetter = cipherMapping[index];
                if (isupper(ciphertext[i])) {
                    decryptedLetter = toupper(decryptedLetter);
                }
                plaintext[i] = decryptedLetter;
            } else {
                plaintext[i] = ciphertext[i];
            }
        }
        plaintext[strlen(ciphertext)] = '\0';
        printf("Possible plaintext #%d: %s\n", k + 1, plaintext);
    }
}

int main() {
    char ciphertext[1000];
    int topN;

    // Get input from the user
    printf("Enter the ciphertext: ");
    fgets(ciphertext, sizeof(ciphertext), stdin);

    printf("Enter the number of top possible plaintexts to display: ");
    scanf("%d", &topN);

    // Perform the letter frequency attack
    letterFrequencyAttack(ciphertext, topN);

    return 0;
}
